{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"S8_sol","provenance":[],"collapsed_sections":[],"toc_visible":true,"mount_file_id":"1I6h7WpH9q88cXLZEfSepaFyzf-u9pObC","authorship_tag":"ABX9TyNkwdDXs73lmtGhoRPkWE6B"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"OkrOA396Cb_T","colab_type":"code","outputId":"f1797a07-d822-4810-b596-83d8ff077df9","executionInfo":{"status":"ok","timestamp":1584022048650,"user_tz":-330,"elapsed":2668,"user":{"displayName":"sandepp pathak","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8fLBuXs6LCQyrSqpLOQIFy-tLXD9PFmAaJhum=s64","userId":"09019340903201769293"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["cd drive/My\\ Drive/S8\n"],"execution_count":1,"outputs":[{"output_type":"stream","text":["/content/drive/My Drive/S8\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"3wAS_v6uCfYG","colab_type":"code","outputId":"0208c914-df01-438a-cba0-6b9e0c2114e2","executionInfo":{"status":"ok","timestamp":1584022053580,"user_tz":-330,"elapsed":7401,"user":{"displayName":"sandepp pathak","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8fLBuXs6LCQyrSqpLOQIFy-tLXD9PFmAaJhum=s64","userId":"09019340903201769293"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["ls"],"execution_count":2,"outputs":[{"output_type":"stream","text":["\u001b[0m\u001b[01;34mdata\u001b[0m/           \u001b[01;34m__pycache__\u001b[0m/             resnet.py  training.py\n","data_loader.py  random_dataset_ploot.py  S8_sol\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wUALNxYgC9rE","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"e6e3d54c-52a3-4f1f-d42a-b610da41f477","executionInfo":{"status":"ok","timestamp":1584022053586,"user_tz":-330,"elapsed":7215,"user":{"displayName":"sandepp pathak","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8fLBuXs6LCQyrSqpLOQIFy-tLXD9PFmAaJhum=s64","userId":"09019340903201769293"}}},"source":["pwd"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/content/drive/My Drive/S8'"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"rLMeXflnFFeO","colab_type":"code","outputId":"2eba3027-148d-4afb-bfd6-1d7cf49e1576","executionInfo":{"status":"ok","timestamp":1584022056643,"user_tz":-330,"elapsed":10112,"user":{"displayName":"sandepp pathak","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8fLBuXs6LCQyrSqpLOQIFy-tLXD9PFmAaJhum=s64","userId":"09019340903201769293"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["from resnet import ResNet18\n","import data_loader\n","import random_dataset_ploot\n","import training\n","import torch\n","import torchvision\n","import torchvision.transforms as transforms\n","trainloader,testloader,classes = data_loader.data_loader_cifar()\n","\n"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Files already downloaded and verified\n","Files already downloaded and verified\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"5oVFmZBoGkCt","colab_type":"code","colab":{}},"source":["# random_dataset_ploot.plot_random(trainloader,classes)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"xXxjF9UiOUZQ","colab_type":"code","colab":{}},"source":["nn1 = ResNet18()\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"KnodgVCGSEVo","colab_type":"code","outputId":"05c3ab14-d2e6-4c79-d7c4-cd83bdf33cda","executionInfo":{"status":"ok","timestamp":1584022060946,"user_tz":-330,"elapsed":13960,"user":{"displayName":"sandepp pathak","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8fLBuXs6LCQyrSqpLOQIFy-tLXD9PFmAaJhum=s64","userId":"09019340903201769293"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["device = 'cuda' if torch.cuda.is_available() else 'cpu'\n","print(device)\n","from torchsummary import summary\n","use_cuda = torch.cuda.is_available()\n","device = torch.device(\"cuda\" if use_cuda else \"cpu\")\n","print(device)\n","model = nn1.to(device)\n","summary(model, input_size=(3, 32, 32))\n","if device == 'cuda':\n","    net = torch.nn.DataParallel(net)\n","    cudnn.benchmark = True"],"execution_count":7,"outputs":[{"output_type":"stream","text":["cuda\n","cuda\n","----------------------------------------------------------------\n","        Layer (type)               Output Shape         Param #\n","================================================================\n","            Conv2d-1           [-1, 64, 32, 32]           1,728\n","       BatchNorm2d-2           [-1, 64, 32, 32]             128\n","            Conv2d-3           [-1, 64, 32, 32]          36,864\n","       BatchNorm2d-4           [-1, 64, 32, 32]             128\n","            Conv2d-5           [-1, 64, 32, 32]          36,864\n","       BatchNorm2d-6           [-1, 64, 32, 32]             128\n","        BasicBlock-7           [-1, 64, 32, 32]               0\n","            Conv2d-8           [-1, 64, 32, 32]          36,864\n","       BatchNorm2d-9           [-1, 64, 32, 32]             128\n","           Conv2d-10           [-1, 64, 32, 32]          36,864\n","      BatchNorm2d-11           [-1, 64, 32, 32]             128\n","       BasicBlock-12           [-1, 64, 32, 32]               0\n","           Conv2d-13          [-1, 128, 16, 16]          73,728\n","      BatchNorm2d-14          [-1, 128, 16, 16]             256\n","           Conv2d-15          [-1, 128, 16, 16]         147,456\n","      BatchNorm2d-16          [-1, 128, 16, 16]             256\n","           Conv2d-17          [-1, 128, 16, 16]           8,192\n","      BatchNorm2d-18          [-1, 128, 16, 16]             256\n","       BasicBlock-19          [-1, 128, 16, 16]               0\n","           Conv2d-20          [-1, 128, 16, 16]         147,456\n","      BatchNorm2d-21          [-1, 128, 16, 16]             256\n","           Conv2d-22          [-1, 128, 16, 16]         147,456\n","      BatchNorm2d-23          [-1, 128, 16, 16]             256\n","       BasicBlock-24          [-1, 128, 16, 16]               0\n","           Conv2d-25            [-1, 256, 8, 8]         294,912\n","      BatchNorm2d-26            [-1, 256, 8, 8]             512\n","           Conv2d-27            [-1, 256, 8, 8]         589,824\n","      BatchNorm2d-28            [-1, 256, 8, 8]             512\n","           Conv2d-29            [-1, 256, 8, 8]          32,768\n","      BatchNorm2d-30            [-1, 256, 8, 8]             512\n","       BasicBlock-31            [-1, 256, 8, 8]               0\n","           Conv2d-32            [-1, 256, 8, 8]         589,824\n","      BatchNorm2d-33            [-1, 256, 8, 8]             512\n","           Conv2d-34            [-1, 256, 8, 8]         589,824\n","      BatchNorm2d-35            [-1, 256, 8, 8]             512\n","       BasicBlock-36            [-1, 256, 8, 8]               0\n","           Conv2d-37            [-1, 512, 4, 4]       1,179,648\n","      BatchNorm2d-38            [-1, 512, 4, 4]           1,024\n","           Conv2d-39            [-1, 512, 4, 4]       2,359,296\n","      BatchNorm2d-40            [-1, 512, 4, 4]           1,024\n","           Conv2d-41            [-1, 512, 4, 4]         131,072\n","      BatchNorm2d-42            [-1, 512, 4, 4]           1,024\n","       BasicBlock-43            [-1, 512, 4, 4]               0\n","           Conv2d-44            [-1, 512, 4, 4]       2,359,296\n","      BatchNorm2d-45            [-1, 512, 4, 4]           1,024\n","           Conv2d-46            [-1, 512, 4, 4]       2,359,296\n","      BatchNorm2d-47            [-1, 512, 4, 4]           1,024\n","       BasicBlock-48            [-1, 512, 4, 4]               0\n","           Linear-49                   [-1, 10]           5,130\n","================================================================\n","Total params: 11,173,962\n","Trainable params: 11,173,962\n","Non-trainable params: 0\n","----------------------------------------------------------------\n","Input size (MB): 0.01\n","Forward/backward pass size (MB): 11.25\n","Params size (MB): 42.63\n","Estimated Total Size (MB): 53.89\n","----------------------------------------------------------------\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"oZku987wSRAb","colab_type":"code","outputId":"0bbeb2bb-aeb0-4afa-d1ef-4d7363e712a8","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1584023485006,"user_tz":-330,"elapsed":1437877,"user":{"displayName":"sandepp pathak","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8fLBuXs6LCQyrSqpLOQIFy-tLXD9PFmAaJhum=s64","userId":"09019340903201769293"}}},"source":["\n","from torch.optim.lr_scheduler import StepLR\n","import torch.optim as optim\n","model =  nn1.to(device)\n","optimizer = optim.SGD(nn1.parameters(), lr=0.01, momentum=0.9, weight_decay=5e-4)\n","scheduler = StepLR(optimizer, step_size=5, gamma=0.01)\n","\n","\n","EPOCHS = 20\n","for epoch in range(EPOCHS):\n","    print(\"EPOCH:\", epoch)\n","    training.train(model, device, trainloader, optimizer, epoch)\n","    # scheduler.step()\n","    training.test(model, device, testloader)\n","\n"],"execution_count":8,"outputs":[{"output_type":"stream","text":["\r  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["EPOCH: 0\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.7764532566070557 Batch_id=781 Accuracy=45.59: 100%|██████████| 782/782 [01:07<00:00, 13.01it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0193, Accuracy: 5589/10000 (55.89%)\n","\n","EPOCH: 1\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.9837307929992676 Batch_id=781 Accuracy=64.50: 100%|██████████| 782/782 [01:07<00:00, 11.56it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0172, Accuracy: 6129/10000 (61.29%)\n","\n","EPOCH: 2\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.6760948896408081 Batch_id=781 Accuracy=73.39: 100%|██████████| 782/782 [01:07<00:00, 11.52it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0121, Accuracy: 7383/10000 (73.83%)\n","\n","EPOCH: 3\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.2678268253803253 Batch_id=781 Accuracy=78.15: 100%|██████████| 782/782 [01:07<00:00, 12.98it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0099, Accuracy: 7818/10000 (78.18%)\n","\n","EPOCH: 4\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.6250452399253845 Batch_id=781 Accuracy=80.92: 100%|██████████| 782/782 [01:07<00:00, 11.53it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0091, Accuracy: 8079/10000 (80.79%)\n","\n","EPOCH: 5\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.45392683148384094 Batch_id=781 Accuracy=83.24: 100%|██████████| 782/782 [01:07<00:00, 11.50it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0096, Accuracy: 7981/10000 (79.81%)\n","\n","EPOCH: 6\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.3095390796661377 Batch_id=781 Accuracy=84.79: 100%|██████████| 782/782 [01:07<00:00, 11.55it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0079, Accuracy: 8278/10000 (82.78%)\n","\n","EPOCH: 7\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.6375845670700073 Batch_id=781 Accuracy=86.13: 100%|██████████| 782/782 [01:07<00:00, 11.59it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0082, Accuracy: 8277/10000 (82.77%)\n","\n","EPOCH: 8\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.6102218627929688 Batch_id=781 Accuracy=86.92: 100%|██████████| 782/782 [01:07<00:00, 11.59it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0074, Accuracy: 8429/10000 (84.29%)\n","\n","EPOCH: 9\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.09937554597854614 Batch_id=781 Accuracy=87.90: 100%|██████████| 782/782 [01:07<00:00, 11.56it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0066, Accuracy: 8576/10000 (85.76%)\n","\n","EPOCH: 10\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.2450944483280182 Batch_id=781 Accuracy=88.66: 100%|██████████| 782/782 [01:07<00:00, 11.54it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0066, Accuracy: 8541/10000 (85.41%)\n","\n","EPOCH: 11\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.49435707926750183 Batch_id=781 Accuracy=89.43: 100%|██████████| 782/782 [01:07<00:00, 11.54it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0070, Accuracy: 8508/10000 (85.08%)\n","\n","EPOCH: 12\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.15744635462760925 Batch_id=781 Accuracy=90.16: 100%|██████████| 782/782 [01:07<00:00, 11.54it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0067, Accuracy: 8543/10000 (85.43%)\n","\n","EPOCH: 13\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.41680365800857544 Batch_id=781 Accuracy=90.38: 100%|██████████| 782/782 [01:08<00:00, 11.50it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0060, Accuracy: 8710/10000 (87.10%)\n","\n","EPOCH: 14\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.3154718577861786 Batch_id=781 Accuracy=91.10: 100%|██████████| 782/782 [01:07<00:00, 11.58it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0065, Accuracy: 8592/10000 (85.92%)\n","\n","EPOCH: 15\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.5672021508216858 Batch_id=781 Accuracy=91.50: 100%|██████████| 782/782 [01:07<00:00, 11.53it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0059, Accuracy: 8799/10000 (87.99%)\n","\n","EPOCH: 16\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.4703666865825653 Batch_id=781 Accuracy=91.67: 100%|██████████| 782/782 [01:07<00:00, 11.58it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0056, Accuracy: 8799/10000 (87.99%)\n","\n","EPOCH: 17\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.03937530517578125 Batch_id=781 Accuracy=92.19: 100%|██████████| 782/782 [01:07<00:00, 11.61it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0059, Accuracy: 8761/10000 (87.61%)\n","\n","EPOCH: 18\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.42891380190849304 Batch_id=781 Accuracy=92.39: 100%|██████████| 782/782 [01:07<00:00, 11.59it/s]\n","  0%|          | 0/782 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0053, Accuracy: 8885/10000 (88.85%)\n","\n","EPOCH: 19\n"],"name":"stdout"},{"output_type":"stream","text":["Loss=0.3416878581047058 Batch_id=781 Accuracy=92.72: 100%|██████████| 782/782 [01:07<00:00, 11.59it/s]\n"],"name":"stderr"},{"output_type":"stream","text":["\n","Test set: Average loss: 0.0054, Accuracy: 8870/10000 (88.70%)\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"UZIyucw3ERPO","colab_type":"text"},"source":["# New Section"]},{"cell_type":"code","metadata":{"id":"WTVhh1NBbOlB","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}